#!/bin/bash

if [ "$1" = "configure" ]; then
	ON_USER=$(who | awk '{print $1}' | sed '/^root$/d' | uniq)

	UBUVER="$(lsb_release -cs)"
	case `lsb_release -cs` in
		helena)
			UBUVER="karmic" ;;
		isadora)
			UBUVER="lucid" ;;
		julia)
			UBUVER="maverick" ;;
		katya)
			UBUVER="natty" ;;
		lisa)
			UBUVER="oneiric" ;;
		maya|luna)
			UBUVER="precise" ;;
		nadia)
			UBUVER="quantal" ;;
		olivia)
			UBUVER="raring" ;;
		petra)
			UBUVER="saucy" ;;
		qiana|rebecca|rafaela|rosa|freya)
			UBUVER="trusty" ;;
		sarah|loki|serena|sonya|sylvia)
			UBUVER="xenial" ;;
		tara|juno|tessa|tina|tricia|hera)
			UBUVER="bionic" ;;
		odin|ulyana|ulyssa|uma|una)
			UBUVER="focal" ;;
		vanessa|vera)
			UBUVER="jammy" ;;
	esac

	#Fix Linux Mint 16 add-apt-repository
	if [ `lsb_release -cs` = "petra" ]; then
		if ! grep -q "petra" /usr/share/python-apt/templates/LinuxMint.info 2>/dev/null; then
		echo "
Suite: petra
RepositoryType: deb
BaseURI: http://packages.linuxmint.com/
MatchURI: packages.linuxmint.com
MirrorsFile-amd64: /usr/share/python-apt/templates/LinuxMint.mirrors
MirrorsFile-i386: /usr/share/python-apt/templates/LinuxMint.mirrors
Description: Linux Mint 16 'Petra'
Component: main
CompDescription: Main packages
CompDescriptionLong: Main packages
Component: upstream
CompDescription: Upstream packages
CompDescriptionLong: Upstream packages
Component: import
CompDescription: Imported packages
CompDescriptionLong: Imported packages
Component: backport
CompDescription: Backports
CompDescriptionLong: Backported packages
Component: romeo
CompDescription: Unstable packages
CompDescriptionLong: Unstable packages" >> /usr/share/python-apt/templates/LinuxMint.info
		fi
	fi
	#Fix Linux Mint 17 add-apt-repository
	if [ `lsb_release -cs` = "qiana" ]; then
		if ! grep -q "qiana" /usr/share/python-apt/templates/LinuxMint.info 2>/dev/null; then
		echo "
Suite: qiana
RepositoryType: deb
BaseURI: http://packages.linuxmint.com/
MatchURI: packages.linuxmint.com
MirrorsFile-amd64: /usr/share/python-apt/templates/LinuxMint.mirrors
MirrorsFile-i386: /usr/share/python-apt/templates/LinuxMint.mirrors
Description: Linux Mint 17 'Qiana'
Component: main
CompDescription: Main packages
CompDescriptionLong: Main packages
Component: upstream
CompDescription: Upstream packages
CompDescriptionLong: Upstream packages
Component: import
CompDescription: Imported packages
CompDescriptionLong: Imported packages
Component: backport
CompDescription: Backports
CompDescriptionLong: Backported packages
Component: romeo
CompDescription: Unstable packages
CompDescriptionLong: Unstable packages" >> /usr/share/python-apt/templates/LinuxMint.info
		fi
	fi


	if [[ ! -e /etc/y-ppa-manager.conf ]]; then

	#DOWN_DIR=`cat /home/$ON_USER/.config/user-dirs.dirs | grep XDG_DOWNLOAD_DIR | sed -e 's/XDG_DOWNLOAD_DIR="$HOME\///g' -e 's/"//g'`

		echo "#ppa-purge behavior: auto - don't require any user input; manual - opens a terminal window asking the user how to solve the issue (this is the default behavior). Set manual/auto below:" > /etc/y-ppa-manager.conf
		echo "ppa-purge=manual" >> /etc/y-ppa-manager.conf
		echo $'\n' >> /etc/y-ppa-manager.conf
		echo "#By default, the integrated PPA Search will display packages for your Ubuntu version. However, you can change this below:" >> /etc/y-ppa-manager.conf
		echo "searchdist=$UBUVER" >> /etc/y-ppa-manager.conf
		echo $'\n' >> /etc/y-ppa-manager.conf
#		echo "#Use Ubuntu Indicator (default: disabled):" >> /etc/y-ppa-manager.conf
#		echo "indicator=disabled" >> /etc/y-ppa-manager.conf
#		echo $'\n' >> /etc/y-ppa-manager.conf
#		echo "#Downloads folder (default: /home/$ON_USER/$DOWN_DIR/y-ppa-manager):" >> /etc/y-ppa-manager.conf
#		echo "downloads=/home/$ON_USER/$DOWN_DIR/y-ppa-manager" >> /etc/y-ppa-manager.conf
		echo $'\n' >> /etc/y-ppa-manager.conf
		echo "rankings=false" >> /etc/y-ppa-manager.conf

#		mkdir -p "/home/$ON_USER/$DOWN_DIR/y-ppa-manager"
#		chown -R "$ON_USER" "/home/$ON_USER/$DOWN_DIR/y-ppa-manager"


	else 

		RANKINGS=`grep "rankings=" /etc/y-ppa-manager.conf`
		if [[ ! $RANKINGS ]]; then
			echo $'\n' >> /etc/y-ppa-manager.conf
			echo "rankings=false" >> /etc/y-ppa-manager.conf
		fi

	#	INDICATOR=`grep "indicator=" /etc/y-ppa-manager.conf`
	#	if [[ ! $INDICATOR ]]; then
	#		echo $'\n' >> /etc/y-ppa-manager.conf
	#		echo "#Use Ubuntu Indicator (default: disabled):" >> /etc/y-ppa-manager.conf
	#		echo "indicator=disabled" >> /etc/y-ppa-manager.conf
	#	fi
	fi


	if [ -x /usr/bin/gtk-update-icon-cache ]; then
		if [ -x /usr/share/icons/ubuntu-mono-dark ]; then
	gtk-update-icon-cache --ignore-theme-index -f -q '/usr/share/icons/ubuntu-mono-dark' && gtk-update-icon-cache --ignore-theme-index -f -q '/usr/share/icons/ubuntu-mono-light' || true
		fi
		if  [ -x /usr/share/icons/Faience ]; then
	gtk-update-icon-cache --ignore-theme-index -f -q '/usr/share/icons/Faience' || true
		fi
	fi
fi

# Automatically added by dh_installmenu/11.1.6ubuntu2
if [ "$1" = "configure" ] && [ -x "`which update-menus 2>/dev/null`" ]; then
	update-menus
fi
# End automatically added section
# Automatically added by dh_icons/11.1.6ubuntu2
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if which update-icon-caches >/dev/null 2>&1 ; then
		update-icon-caches /usr/share/icons/Faience /usr/share/icons/ubuntu-mono-dark /usr/share/icons/ubuntu-mono-light
	fi
fi
# End automatically added section


exit 0
